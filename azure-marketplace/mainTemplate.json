{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseUrl": {
    "type": "string",
    "metadata": {
         "description": "The base URL for dependent assets",
         "artifactsBaseUrl": ""
     },
    "defaultValue": "https://raw.githubusercontent.com/hortonworks/cbd-quickstart/2.7.1/"
    },
    "location": {
    "type": "string",
    "metadata": {
         "description": "Location of the resource group"
     },
    "defaultValue": "[resourceGroup().location]"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS2",
      "allowedValues": [
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2"

      ],
      "metadata": {
        "description": "Size of vm"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "admin@example.com",
      "minLength": 6,
      "metadata": {
        "description": "Username for the Admin account. Must be a valid email address."
      }
    },
    "adminUserPassword": {
      "type": "securestring",
      "minLength": 6,
      "metadata": {
        "description": "Password for Admin account. Must be at least 8 characters containing letters, numbers and symbols."
      }
    },
    "username": {
      "type": "string",
      "defaultValue": "cloudbreak",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "remoteLocation": {
      "type": "string",
      "defaultValue": "INTERNET",
      "metadata": {
        "description": "Allow connections from this address range. Must be a valid CIDR IP."
      }
    },
    "sshKey": {
      "type": "string",
      "metadata": {
        "description": "SSH key for cloudbreak."
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
          "new",
          "existing"
      ]
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "cbdeployerVnet",
      "metadata": {
        "description": "Name of Virtual Network of Cloud Controller."
      }
    },
    "vnetSubnetName": {
      "type": "string",
      "defaultValue": "cbdeployerSubnet",
      "metadata": {
        "description": "Name of subnet."
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "CIDR for the Virtual Network."
      }
    },
    "vnetSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "CIDR for the Subnet."
      }
    },
    "vnetRGName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "Name of the resource group of the VNet, must be the name of the resource group of the deployment if new VNet is selected!"
      }
    }
  },
  "variables": {
    "version":{
      "templateAPIVersion":"2015-11-01",
      "computeAPIVersion":"2017-03-30",
      "networkAPIVersion":"2017-06-01",
      "storageAPIVersion":"2017-06-01",
      "typeHandlerVersion":"2.0",
      "contentVersion":"1.0.0.0"
    },
    "newStorageAccountName": "[concat('cbdstorage', uniqueString(resourceGroup().id))]",
    "scenarioPrefix": "cbdeployer",
    "imagePublisher": "OpenLogic",
    "imageOffer": "CentOS-CI",
    "imageSku": "7-CI",
    "osDiskName": "[concat(variables('scenarioPrefix'),'OSDisk')]",
    "osDiskCreateOption": "FromImage",
    "nicName": "[concat(variables('scenarioPrefix'),'Nic')]",
    "sshKeyPath": "[concat('/home/',parameters('username'),'/.ssh/authorized_keys')]",
    "securityGroupName": "[concat(variables('scenarioPrefix'),'Nsg')]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat(variables('scenarioPrefix'),'PublicIp')]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat(variables('scenarioPrefix'),'VM')]",
    "virtualNetworkName": "[concat(variables('scenarioPrefix'),'Vnet')]",
    "singleQuote": "'"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "apiVersion": "[variables('version').storageAPIVersion]",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "sku": {
        "name": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('version').networkAPIVersion]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat('cloudbreak-controller-', uniqueString(resourceGroup().id))]"
        }
      }
    },
    {
        "name": "[variables('virtualNetworkName')]",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "[variables('version').templateAPIVersion]",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[concat(parameters('baseUrl'), '/vnet_', parameters('vnetNewOrExisting'), '.json')]",
              "contentVersion": "[variables('version').contentVersion]"
            },
            "parameters": {
                "vnetName": {
                    "value": "[parameters('vnetName')]"
                },
                "vnetAddressPrefix": {
                    "value": "[parameters('vnetAddressPrefix')]"
                },
                "vnetSubnetName": {
                    "value": "[parameters('vnetSubnetName')]"
                },
                "vnetSubnetAddressPrefix": {
                    "value": "[parameters('vnetSubnetAddressPrefix')]"
                },
                "location": {
                    "value": "[parameters('location')]"
                }
            }
        }
    },
    {
      "apiVersion": "[variables('version').networkAPIVersion]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('securityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh_rule",
            "properties": {
                "description": "Allow SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "[parameters('remoteLocation')]",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
            }
          },
          {
            "name": "http_rule",
            "properties": {
                "description": "Allow HTTP",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "[parameters('remoteLocation')]",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 101,
                "direction": "Inbound"
            }
          },
          {
            "name": "https_rule",
            "properties": {
                "description": "Allow HTTPS",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "[parameters('remoteLocation')]",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 102,
                "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('version').networkAPIVersion]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('securityGroupName'))]",
        "[concat('Microsoft.Resources/deployments/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[concat(resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName')))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[concat(resourceId(parameters('vnetRGName'), 'Microsoft.Network/virtualNetworks', concat(parameters('vnetName'))), '/subnets/', parameters('vnetSubnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('version').computeAPIVersion]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('username')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKey')]"
                }
              ]
            }
          },
          "customData": "[base64(concat('#!/bin/bash\n','\necho \"export PUBLIC_IP=',reference(variables('publicIPAddressName')).dnsSettings.fqdn,'\" >> /tmp/.cbdprofile','\necho \"export CB_TRAEFIK_HOST_ADDRESS=',reference(variables('publicIPAddressName')).ipAddress,'\" >> /tmp/.cbdprofile','\necho \"export CBD_VERSION=2.7.1\" >> /tmp/.cbdprofile','\necho \"export AZURE_SUBSCRIPTION_ID=',subscription().subscriptionId,'\" >> /tmp/.cbdprofile','\necho \"export AZURE_TENANT_ID=',subscription().tenantId,'\" >> /tmp/.cbdprofile','\necho \"export UAA_DEFAULT_USER_EMAIL=',parameters('adminUsername'),'\" >> /tmp/.cbdprofile','\necho $',variables('singleQuote'), 'export UAA_DEFAULT_USER_PW=$\\',variables('singleQuote'),parameters('adminUserPassword'),'\\', variables('singleQuote'),variables('singleQuote'), '>> /tmp/.cbdprofile','\necho \"export OS_USER=',parameters('username'),'\" >> /tmp/.cbdprofile', '\necho \"export ULU_DEFAULT_SSH_KEY=',variables('singleQuote'),parameters('sshKey'),variables('singleQuote'),'\" >> /tmp/.cbdprofile', '\necho \"export SUBNET_CIDR=',parameters('vnetSubnetAddressPrefix'),'\" >> /tmp/.cbdprofile', '\necho \"export UAA_DEFAULT_SECRET=',base64(resourceGroup().id),'\" >> /tmp/.cbdprofile'))]"
        },
        "storageProfile": {

          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "7.4.20180417"
          },

          "osDisk": {
            "name": "osdisk1",


            "vhd": {
              "uri": "[concat(reference(variables('newStorageAccountName')).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },

            "caching": "ReadWrite",
            "createOption": "[variables('osDiskCreateOption')]"
          }

        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/installcustomscript')]",
      "apiVersion": "[variables('version').computeAPIVersion]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "script": "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"
        }
      }
    }
  ],
  "outputs": {
     "loginUrl": {
       "type": "string",
       "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
     }
   }
}
