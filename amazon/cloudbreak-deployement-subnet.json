{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "NetworkStackName": {
      "Description": "Name of an active CloudFormation stack that contains the networking resources, such as the subnet and security group, that will be used in this stack.",
      "Type": "String",
      "MinLength" : 1,
      "MaxLength" : 255,
      "AllowedPattern" : "^[a-zA-Z][-a-zA-Z0-9]*$",
      "Default" : "cbd-subnet-test"
    }
  },

  "Mappings": {
      "AWSRegionAMI": {
        "us-east-1": { "ami": "ami-4d1e0f27"},
        "us-west-2": { "ami": "ami-b724d0d7"},
        "us-west-1": { "ami": "ami-c4a2dea4"},
        "eu-west-1": { "ami": "ami-42820131"},
        "eu-central-1": { "ami": "ami-cf5cbda0"},
        "ap-southeast-1": { "ami": "ami-a6e237c5"},
        "ap-northeast-1": { "ami": "ami-ee3d2e80"},
        "ap-southeast-2": { "ami": "ami-73517310"},
        "sa-east-1": { "ami": "ami-902ba4fc"}
      }
   },

   "Resources" : {
    "Cloudbreak": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
      },
      "Properties": {
        "IamInstanceProfile" : { "Ref" : "RootInstanceProfile" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionAMI", { "Ref" : "AWS::Region" }, "ami" ] },
        "InstanceType"   : "m3.medium",
        "KeyName"        : { "Ref" : "KeyName" },

        "NetworkInterfaces" : [{
          "GroupSet"                 : [{ "Fn::GetAtt": [ "NetworkInfo", "sgcbdprivatevpcsecgrp" ] }],
          "AssociatePublicIpAddress" : "false",
          "DeviceIndex"              : "0",
          "DeleteOnTermination"      : "true",
          "SubnetId"                 : { "Fn::GetAtt": [ "NetworkInfo", "subnetprivate" ] }
        }],
        "Tags": [
          {
            "Key": "Name",
            "Value": "cbd-private-subnet"
          }
        ],
        
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash\n",
          "exec > >(tee /tmp/aws-quick-start.log|logger -t user-data -s 2>/dev/console) 2>&1\n",
          "set -x\n",
          "#cat << COMMENT\n",
          "sed -i '/^Wants/ d' /etc/systemd/system/docker.service\n",
          "systemctl daemon-reload\n",
          "systemctl stop docker\n",
          "systemctl start docker\n",
          "\n",
          "echo wait for docker ...\n",
          "while ! (curl -m 1 -f 127.0.0.1:2376/_ping &>/dev/null);do echo -n .; sleep 1; done\n" ,
          "\n",
          "export BLUEPRINT=hdp-small-defult\n",
          "export CLUSTERSIZE=5\n",
          "\n",
          "cd /var/lib/cloudbreak-deployment\n",
          "cbd init\n",
          "cbd start\n",
          "#COMMENT\n",
          ""

        ]]}}
      }
    },

    "RootInstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ {
               "Ref": "AssumerRole"
            } ]
         }
      },

    "AssumerRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                      "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/",
            "Policies": [ {
               "PolicyName": "root",
               "PolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [ {
                     "Effect": "Allow",
                     "Action": "sts:AssumeRole",
                     "Resource": "*"
                  } ]
               }
               } ]
            }
      },
    "CloudbreakRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/",
            "Policies": [ {
               "PolicyName": "root",
               "PolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [ {
                     "Effect": "Allow",
                     "Action": "*",
                     "Resource": "*"
                  } ]
               }
               } ]
            }
      },


    "CloudbreakSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80 and SSH access",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "3000", "ToPort" : "3001", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "8089", "ToPort" : "8089", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
        ]
      }
    },

    "NetworkInfo": {
      "Type": "Custom::NetworkInfo",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["LookupStackOutputs", "Arn"] },
        "StackName": {
          "Ref": "NetworkStackName"
        }
      }
    },

    "LookupStackOutputs": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
        "Code": {
          "ZipFile":  { "Fn::Join": ["\n", [
            "var response = require('cfn-response');",
            "exports.handler = function(event, context) {",
            "    console.log('REQUEST RECEIVED:\\n', JSON.stringify(event));",
            "    if (event.RequestType == 'Delete') {",
            "        response.send(event, context, response.SUCCESS);",
            "        return;",
            "    }",
            "    var stackName = event.ResourceProperties.StackName;",
            "    var responseData = {};",
            "    if (stackName) {",
            "        var aws = require('aws-sdk');",
            "        var cfn = new aws.CloudFormation();",
            "        cfn.describeStackResources({StackName: stackName}, function(err, data) {",
            "            if (err) {",
            "                responseData = {Error: 'describeStackResources call failed'};",
            "                console.log(responseData.Error + ':\\n', err);",
            "                response.send(event, context, response.FAILED, responseData);",
            "            }",
            "            else {",
            "                data.StackResources.forEach(function(res) {",
            "                    responseData[res.LogicalResourceId] = res.PhysicalResourceId;",
            "                });",
            "                response.send(event, context, response.SUCCESS, responseData);",
            "                console.log('responseData: %j', responseData);",
            "            }",
            "        });",
            "    } else {",
            "        responseData = {Error: 'Stack name not specified'};",
            "        console.log(responseData.Error);",
            "        response.send(event, context, response.FAILED, responseData);",
            "    }",
            "};"
          ]]}
        },
        "Runtime": "nodejs",
        "Timeout": "30"
      }
    },
 
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
              "Effect": "Allow",
              "Principal": {"Service": ["lambda.amazonaws.com"]},
              "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "root",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
                "Effect": "Allow",
                "Action": ["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"],
                "Resource": "arn:aws:logs:*:*:*"
            },
            {
                "Effect": "Allow",
                "Action": ["cloudformation:DescribeStacks", "cloudformation:DescribeStackResources"],
                "Resource": "*"
            }]
          }
        }]
      }
    }

   },

    "Outputs" : {
      "PrivteIP" : {
        "Value" : { "Fn::GetAtt" : [ "Cloudbreak", "PrivateIp" ]},
        "Description" : "PrivteIP of cbd"
      },
      "SshAccess" : {
        "Value" : { "Fn::Join" : ["", ["ssh cloudbreak@", { "Fn::GetAtt" : [ "Cloudbreak", "PrivateIp" ]} ]] },
        "Description" : "SSG connection to cbd instance"
      }
  }
}
