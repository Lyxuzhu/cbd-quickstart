---
AWSTemplateFormatVersion: 2010-09-09

Description: Deploys Shared Services such as RDS,VPC and EllasticIP

Parameters:
  MasterUsernameParameter:
    Type: String
    Description: Master Username for the RDS database
  MasterUserPassword:
    Type: String
    Description: Password of the Master User for the RDS database
    NoEcho: true

Resources:

  VPC:
      Type : AWS::EC2::VPC
      Properties :
        CidrBlock: 10.0.0.0/16
        EnableDnsSupport: true
        EnableDnsHostnames: true

  PublicSubnetA:
      Type: AWS::EC2::Subnet
      Properties:
        MapPublicIpOnLaunch : true
        VpcId : !Ref VPC
        AvailabilityZone: !Sub ${AWS::Region}a
        CidrBlock: 10.0.0.0/24

  PublicSubnetB:
      Type: AWS::EC2::Subnet
      Properties:
        MapPublicIpOnLaunch : true
        VpcId : !Ref VPC
        AvailabilityZone: !Sub ${AWS::Region}b
        CidrBlock: 10.0.1.0/24
            
  InternetGateway:
      Type: AWS::EC2::InternetGateway

  AttachGateway:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
         VpcId : !Ref VPC
         InternetGatewayId : !Ref InternetGateway

  PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
          VpcId : !Ref VPC

  PublicRoute:
      Type: AWS::EC2::Route
      DependsOn :
          - PublicRouteTable
          - AttachGateway
      Properties:
        RouteTableId: !Ref PublicRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId : !Ref InternetGateway

  PublicSubnetRouteTableAssociationA:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref PublicSubnetA
        RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociationB:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref PublicSubnetB
        RouteTableId: !Ref PublicRouteTable

  ControlPlaneDB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '10'
      DBInstanceClass: db.t2.medium
      DBInstanceIdentifier: !Sub RDS-${AWS::StackName}
      DBSubnetGroupName: !Ref CPSubnetGroup
      Engine: postgres
      MasterUsername: !Ref MasterUsernameParameter
      MasterUserPassword: !Ref MasterUserPassword
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !Ref PostgresSecurityGroup
    DeletionPolicy: Snapshot

  PostgresSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '5432'
        ToPort: '5432'
        CidrIp: 10.0.0.0/16
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '5432'
        ToPort: '5432'
        CidrIp: 0.0.0.0/0

  CPSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "description"
      SubnetIds:
        - !Ref PublicSubnetA
        - !Ref PublicSubnetB

Outputs:
  SharedRdsUsername:
    Description: Rds Username of the shared RDS
    Value: !Ref MasterUsernameParameter
    Export:
      Name: Shared-{{ $SHARED_PREFIX }}-RdsUsername
  SharedRdsDatabase:
    Description: Rds Username of the shared RDS
    Value: postgres
    Export:
      Name: Shared-{{ $SHARED_PREFIX }}-RdsDatabase
  SharedRdsEndpoint:
    Description: DNS name and Port of the DB
    Value: !Sub ${ControlPlaneDB.Endpoint.Address}:${ControlPlaneDB.Endpoint.Port}
    Export:
        Name: Shared-{{ $SHARED_PREFIX }}-RdsEndpoint
  SharedInternetGateway:
    Description: SharedInternetGateway
    Value: !Ref InternetGateway
    Export:
      Name: Shared-{{ $SHARED_PREFIX }}-InternetGateway
  SharedPublicSubnetA:
    Description: SharedPublicSubnetA
    Value: !Ref PublicSubnetA
    Export:
      Name: Shared-{{ $SHARED_PREFIX }}-PublicSubnetA
  SharedPublicSubnetB:
    Description: SharedPublicSubnetB
    Value: !Ref PublicSubnetB
    Export:
      Name: Shared-{{ $SHARED_PREFIX }}-PublicSubnetB
  SharedVPC:
    Description: SharedVPC
    Value: !Ref VPC
    Export:
      Name: Shared-{{ $SHARED_PREFIX }}-VPC

