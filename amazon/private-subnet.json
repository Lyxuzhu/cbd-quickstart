{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
 
    "AvailabilityZone" : {
      "Type" : "AWS::EC2::AvailabilityZone::Name",
      "Description" : "Enter the Availabilityz one."
    }
  },

   "Mappings": {
     "AWSRegionAMI": {
       "us-east-1": { "ami": "ami-303b1458"},
       "us-west-2": { "ami": "ami-69ae8259"},
       "us-west-1": { "ami": "ami-7da94839"},
       "eu-west-1": { "ami": "ami-6975eb1e"},
       "eu-central-1": { "ami": "ami-46073a5b"},
       "ap-southeast-1": { "ami": "ami-b49dace6"},
       "ap-northeast-1": { "ami": "ami-03cf3903"},
       "ap-southeast-2": { "ami": "ami-e7ee9edd"},
       "sa-east-1": { "ami": "ami-fbfa41e6"}
     }
  },

  "Resources": {
    "vpccloudbreak": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cloudbreakvpc"
          }
        ]
      }
    },
    "subnetprivate": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": { "Ref" : "AvailabilityZone"},
        "VpcId": {
          "Ref": "vpccloudbreak"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private subnet"
          }
        ]
      }
    },
    "subnetpublic": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": { "Ref" : "AvailabilityZone"},
        "VpcId": {
          "Ref": "vpccloudbreak"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public subnet"
          }
        ]
      }
    },
    "igwmain": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "doptmain": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "eu-central-1.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "aclmain": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpccloudbreak"
        }
      }
    },
    "rtbPublic": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpccloudbreak"
        }
      }
    },
    "rtbPrivate": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpccloudbreak"
        }
      }
    },
    "instancenat": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": { "Fn::FindInMap" : [ "AWSRegionAMI", { "Ref" : "AWS::Region" }, "ami" ] },
        "InstanceType": "t2.micro",
        "KeyName": { "Ref" : "KeyName" },
        "SourceDestCheck": "false",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "NAT"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnetpublic"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.0.133",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgdefault"
              }
            ]
          }
        ]
      }
    },
    "sgcbdprivatevpcsecgrp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "launch-wizard-8 created 2016-05-02T21:02:14.002+02:00",
        "VpcId": {
          "Ref": "vpccloudbreak"
        }
      }
    },
    "sgdefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "vpccloudbreak"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NATSG"
          }
        ]
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclmain"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclmain"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclmain"
        },
        "SubnetId": {
          "Ref": "subnetprivate"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclmain"
        },
        "SubnetId": {
          "Ref": "subnetpublic"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpccloudbreak"
        },
        "InternetGatewayId": {
          "Ref": "igwmain"
        }
      }
    },
    "subnetRouteAssocPublic": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPublic"
        },
        "SubnetId": {
          "Ref": "subnetpublic"
        }
      }
    },
    "subnetRouteAssocPrivate": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivate"
        },
        "SubnetId": {
          "Ref": "subnetprivate"
        }
      }
    },
    "routeInternet": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbPublic"
        },
        "GatewayId": {
          "Ref": "igwmain"
        }
      },
      "DependsOn": "gw1"
    },
    "routeNat": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbPrivate"
        },
        "InstanceId": {
          "Ref": "instancenat"
        }
      }
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpccloudbreak"
        },
        "DhcpOptionsId": {
          "Ref": "doptmain"
        }
      }
    },
    "MyEIP" : {
        "Type" : "AWS::EC2::EIP",
        "Properties" : {
            "InstanceId" : {
              "Ref" : "instancenat"
            }
         }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgcbdprivatevpcsecgrp"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "10.0.1.0/24"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.0.1.0/24"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "10.0.1.0/24"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgcbdprivatevpcsecgrp"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.0.1.0/24"
      }
    },
    "egress4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress5": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "CloudbreakPrivateSubnet",

  "Outputs" : {
    "NatIP" : {
      "Value" : { "Fn::GetAtt" : [ "instancenat", "PublicDnsName" ]},
      "Description" : "PublicIP of NAT instances"
    },
    "NatSSH" : {
      "Value" : { "Fn::Join" : ["", ["ssh -A ec2-user@", { "Fn::GetAtt" : [ "instancenat", "PublicDnsName" ]} ]] },
      "Description" : "SSH connection to NAT instance"
    },
    "vpc" : {
      "Value" : { "Ref" : "vpccloudbreak" },
      "Description" : "VpcId"
    },
    "subnetprivate" : {
      "Value" : { "Ref" : "subnetprivate" },
      "Description" : "Privte SubnetId"
    },
    "subnetpublic" : {
      "Value" : { "Ref" : "subnetpublic" },
      "Description" : "Public SubnetId"
    }
  }
}
